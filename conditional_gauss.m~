function [ output_args ] = conditional_gauss(theta, latent_variables, data,n,d, mu_0, tau,  )
%UNTITLED11 Summary of this function goes here
%   Detailed explanation goes here
%conditional gauss 
mu_temp = latent_variables;%
%kernel matrix for training dataset
Knn_train_train = zeros(n_train,n_train);
    for i=1:n_train
        for j=1:n_train
                pair_diff = data(n_test+i,2:d+1) - data(n_test+j,2:d+1);
                Knn_train_train(i,j) = exp(-1/2*pair_diff * diag(1 ./ (ones(d,1)*exp(mu_0))) * pair_diff')+ 1e-3;  
        end
    end
%kernel matrix for test dataset x  training dataset
Knn_test_train = zeros(n_test,n_train);
    for i=1:n_test
        for j=1:n_train
                pair_diff = data(i,2:d+1) - data(n_test+j,2:d+1);
                Knn_test_train(i,j) = exp(-1/2*pair_diff * diag(1 ./ (ones(d,1)*exp(mu_0))) * pair_diff')+ 1e-3;  
        end
    end
    
    
    mu_test2 = Knn_test_train*inv(Knn_train_train)*mu_temp(n_test+1:n,:);
    %% evaluate the test loss
    test_loss_temp = 0;
    for i=1:n_test
        temp = label(i,:)*mu_test2(i,:);
        test_loss_temp = test_loss_temp - log(1+exp(-temp));
    end
    test_loss2 = test_loss_temp/n_test;

end

